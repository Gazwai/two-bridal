    <%= simple_form_for [ @dress, @booking ] do |f| %>
      <%= f.input :starting_date, as: :string, required: false, input_html: {id: "start_date"} %>
      <%= f.input :ending_date, as: :string, required: false, input_html: {id: "end_date"} %>
      <%= f.submit class: 'btn btn-dark float-right'%>
      <p id= day_price>Price per day: $<%= @dress.price_per_day %></p>
      <div style="display:flex;"><p>Total: $</p><p id="price">0</p>
      </div>
    <% end %>

<script>
const dates = document.getElementById("start_date");
// Gets and sets the dates in a variable
const price_regex = document.getElementById("day_price").innerText.match(/\d+/g);
// Gets the inner text of day_price and matches to get an array of the dress price

dates.addEventListener("change", (event) => {
  event_dates = event.target.value.split(' to ')
  mili_first = Date.parse(first_date = event_dates[0])
  mili_second = Date.parse(second_date = event_dates[1])
  // conversion to Date and milliseconds
  days = Math.round((mili_second - mili_first)/(1000*60*60*24))
  // difference_ms = mili_second - mili_first / one_day=1000*60*60*24
  if (Number.isInteger(days)) {
  document.getElementById("price").innerHTML =(days*price_regex);
  document.getElementById("day").innerHTML =(days);
  } else {
  document.getElementById("price").innerHTML =(price_regex);
  }
  // If only one date(ex. start date only) was selected or the same day, it would return and show NaN(Not-A-Number)
});
</script>

<%# This works right now. Good enough for the demo maybe. I need help from a TA to decide where to put this code. %>
